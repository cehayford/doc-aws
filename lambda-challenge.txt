textFeedReport


import boto3
import json
import os
import re
from urllib.parse import unquote_plus

def lambda_handler(event, context):
    TOPIC_ARN = os.environ['SNS_TOPIC_ARN']
    
    s3_client = boto3.client('s3')
    sns_client = boto3.client('sns')
    
    try:
        s3_record = event['Records'][0]['s3']
        bucket_name = s3_record['bucket']['name']
        object_key = unquote_plus(s3_record['object']['key'])
        
        print(f"Processing file: {object_key} from bucket: {bucket_name}")

        response = s3_client.get_object(Bucket=bucket_name, Key=object_key)
        file_content = response['Body'].read()
        
        try:
            text_content = file_content.decode('utf-8')
        except UnicodeDecodeError:
            try:
                text_content = file_content.decode('latin-1')
            except UnicodeDecodeError:
                text_content = file_content.decode('cp1252')
        
        words = re.findall(r'\b\w+\b', text_content)
        word_count = len(words)
        
        file_name = object_key.split('/')[-1]
        
        message = f"The word count in the {file_name} file is {word_count}."
        
        sns_response = sns_client.publish(
            TopicArn=TOPIC_ARN,
            Subject='Word Count Result',
            Message=message
        )
        
        print(f"SNS message sent successfully. MessageId: {sns_response['MessageId']}")
        print(f"Word count for {file_name}: {word_count}")
        
        return {
            'statusCode': 200,
            'body': json.dumps({
                'message': 'Word count processed successfully',
                'file_name': file_name,
                'word_count': word_count,
                'sns_message_id': sns_response['MessageId']
            })
        }
        
    except Exception as e:
        error_message = f"Error processing file: {str(e)}"
        print(error_message)
        
        # Send error notification via SNS
        try:
            sns_client.publish(
                TopicArn=TOPIC_ARN,
                Subject='Word Count Error',
                Message=f"An error occurred while processing the word count: {error_message}"
            )
        except Exception as sns_error:
            print(f"Failed to send error notification: {str(sns_error)}")
        
        return {
            'statusCode': 500,
            'body': json.dumps({
                'error': error_message
            })
        }